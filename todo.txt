current problems:
    - laps somehow seem to be counted twice sometimes
    - network doesnt seem to be incentivised to not collide with the wall for this reason i think
    - network doesnt seem to achieve same fitness score when visualised
    - overfitting may be due to car knowing position - possibly remove this information and instead simply inform of:
        - speed, acceleration, computer vision, and maybe rnn stuff

do

test RNN architecture:
    - potentially pass in previous inputs
    - or provide "storage" outputs that get passed back to the RNN
    - potentially consider preserving old-old bests since we don't want to abandon a route simply because of a different track

succeed in life :)


doing

train genetic algorithm :)


done
import modes

track limits detection:
    - calculate using compute shader to iterate over cars
    - if x, y changes sides of a track limit then violation
    - possibly think of some way to optimize this to not have to check all track limits

track generation from image:
    - sample verticle pixels at regular intervals, if colour (line) then outside, inside, inside, outside, outside ...
    - decided to track generator instead

lap timing:
    - possibly add start/finish line to track file
    - do not allow to pass back over finish line
    - count frames rather than time when deterministic

computer vision:
    - select inputs for genetic algorithm
    - calculate vision points 

create genetic algorithm :)